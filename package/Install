;*
;* NallePuh for AmigaONE/Sam4x0/AmigaOS 4.x
;*
;*	http://github.com/khval/nallepuh
;*

;********* MESSAGES ***************************************

(set MStartup
  (cat  "\nWelcome to the\n\n"
        "Nalle Puh installation\n\n\n"
        "This project is open source and distributed as GPL.\n\n"
        "https://github.com/khval/nallepuh"
  )
)

(set POptions "What do you want to install?")
(set HOptions
  (cat  "Lots of text about what to installl\n\n"
  )
)

(set SLibs    "Libraries")
(set SNallePuh   "NallePuh")
(set SCatalog   "Catalog")

(set PLibDestDir "Where do you want to install the libraries?")
(set HLibDestDir
  (cat  "Choose the drawer for the system libraries. "
        "Usually, this is \"LIBS:\"."
  )
)

(set PNallePuhDestDir "Where do you want to install NallePuh")
(set HNallePuhDestDir
  (cat  "Choose a drawer that is within the shell path. "
        "Usually, this is \"sys:system\"."
  )
)

(set PCatDestDir "Where do you want to install the catalogs?")
(set HCatDestDir
  (cat  "Choose the drawer where you put all locale catalog files. "
        "Usually, this is \"LOCALE:Catalogs/\"."
  )
)

(set PCopyLib     "Copying the NallePuh")

;********* FILES ******************************************

(set LibName1	 "libblitter.library")
(set LibName2	 "ciaa.resource")
(set LibName3	 "ciab.resource")

(set PCopyLib1 (cat "Copying " LibName1))
(set PCopyLib2 (cat "Copying " LibName2))
(set PCopyLib3 (cat "Copying " LibName3))

(set FCopyLib1	(tackon "libs" LibName1))
(set FCopyLib2 (tackon "libs" LibName2))
(set FCopyLib3 (tackon "libs" LibName3))

(set FNallePuh		"NallePuh")
(set FNallePuhInfo	"NallePuh.info")
(set FCat			"locale/catalogs/")

;********* INSTALLER SCRIPT *******************************

(set @default-dest "")          ; currently no specific dir

;------ Greetings to the user -----------------------------
(message MStartup)

;------ What should be installed --------------------------
(set InstOpts                   ; ask what to install
  (askoptions
    (prompt  POptions)
    (help    HOptions)
    (choices SLibs SNallePuh SCatalog)
    (default -1)
  )
)

;------ Ask for destinations ------------------------------

(if (IN InstOpts 0)             ; Libs
  (
    (set LibDestDir "LIBS:")    ; Destination for the library
    (if (= @user-level 2)
      (
        (set LibDestDir
          (askdir
            (prompt PLibDestDir)
            (help   HLibDestDir)
            (default LibDestDir)
          )
        )
        (set FCopyLib1 Lib)
      )
    )
  )
)

(if (IN InstOpts 1)             ; NallePuh
  (
    (set NallePuhDestDir "sys:system/")
    (if (= @user-level 2)
      (set NallePuhDestDir
        (askdir
          (prompt PNallePuhDestDir)
          (help   HNallePuhDestDir)
          (default NallePuhDestDir)
        )
      )
    )
  )
)

(if (IN InstOpts 2)             ; Catalogs
  (
    (set CatDestDir "Locale:Catalogs/")
    (if (= @user-level 2)
      (set CatDestDir
        (askdir
          (prompt PCatDestDir)
          (help   HCatDestDir)
          (default CatDestDir)
        )
      )
    )
  )
)

;------ Copy all files ------------------------------------
(if (IN InstOpts 0)             ; Libraries
  (

    (copylib
      (prompt  PCopyLib1)
      (help    @copylib-help)
      (confirm)
      (source  "libs/libblitter.library")
      (dest    LibDestDir)
      (newname LibName1)
    )

    (copylib
      (prompt  PCopyLib2)
      (help    @copylib-help)
      (confirm)
      (source  "libs/ciaa.resource")
      (dest    LibDestDir)
      (newname LibName1)
    )

    (copylib
      (prompt  PCopyLib3)
      (help    @copylib-help)
      (confirm)
      (source  "libs/ciab.resource")
      (dest    LibDestDir)
      (newname LibName1)
    )

  )
)

(if (IN InstOpts 1)             ; NallePuh
  (
    (copyfiles
      (prompt PCopyNallePuh)
      (help   HCopyNallePuh)
      (confirm)
      (source FNallePuh)
      (dest   NallePuhDestDir)
      (all)
      (infos)
    )
  )
)

(set PCopyCat     "Copying the catalogs")

(if (IN InstOpts 3)             ; Catalogs
  (
    (copyfiles
      (prompt PCopyCat)
      (help   @copyfiles-help)
      (confirm)
      (source FCat)
      (dest   CatDestDir)
      (all)
      (infos)
      (noposition)
    )
  )
)

(exit)
